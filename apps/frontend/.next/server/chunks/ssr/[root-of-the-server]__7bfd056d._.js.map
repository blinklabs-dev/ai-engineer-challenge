{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/naveenjain/Projects/ai-engineer-challenge/apps/frontend/src/app/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport { FiSend, FiSettings, FiCopy, FiCheck } from \"react-icons/fi\";\n\nexport default function Home() {\n  const [question, setQuestion] = useState(\"\");\n  const [answer, setAnswer] = useState(\"\");\n  const [apiKey, setApiKey] = useState(\"\");\n  const [model, setModel] = useState(\"gpt-3.5-turbo\");\n  const [loading, setLoading] = useState(false);\n  const [copied, setCopied] = useState(false);\n  const [showSettings, setShowSettings] = useState(false);\n\n  useEffect(() => {\n    const storedKey = localStorage.getItem(\"OPENAI_API_KEY\");\n    if (storedKey) setApiKey(storedKey);\n  }, []);\n\n  const askQuestion = async () => {\n    if (!question.trim()) return;\n    setLoading(true);\n    setAnswer(\"\");\n\n    try {\n      const res = await fetch(\"http://localhost:8000/ask\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          q: question,\n          model,\n          api_key: apiKey || null,\n        }),\n      });\n\n      const data = await res.json();\n      if (data.answer) {\n        setAnswer(data.answer);\n      } else if (data.error) {\n        setAnswer(data.error);\n      }\n    } catch (err) {\n      setAnswer(\"⚠️ Failed to reach backend.\");\n    } finally {\n      setLoading(false);\n    }\n\n    if (apiKey) {\n      localStorage.setItem(\"OPENAI_API_KEY\", apiKey);\n    }\n  };\n\n  const copyToClipboard = async (text: string) => {\n    await navigator.clipboard.writeText(text);\n    setCopied(true);\n    setTimeout(() => setCopied(false), 2000);\n  };\n\n  const handleKeyPress = (e: React.KeyboardEvent) => {\n    if (e.key === \"Enter\" && (e.metaKey || e.ctrlKey)) {\n      askQuestion();\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-100 to-slate-200 dark:from-gray-900 dark:to-gray-800 py-10 px-4\">\n      <div className=\"max-w-4xl mx-auto\">\n        {/* Header */}\n        <div className=\"flex justify-between items-center mb-6\">\n          <div>\n            <h1 className=\"text-3xl font-bold text-blue-700 dark:text-blue-400\">Ask Marvin 🧠</h1>\n            <p className=\"text-sm text-gray-600 dark:text-gray-400\">Your curious AI sidekick</p>\n          </div>\n          <button\n            onClick={() => setShowSettings(!showSettings)}\n            className=\"p-2 rounded-full hover:bg-slate-200 dark:hover:bg-slate-700\"\n            title=\"Settings\"\n          >\n            <FiSettings className=\"text-xl text-gray-600 dark:text-gray-300\" />\n          </button>\n        </div>\n\n        {/* Chat Panel */}\n        <div className=\"bg-white dark:bg-gray-800 shadow-xl rounded-xl p-6 mb-4\">\n          <textarea\n            className=\"w-full bg-gray-100 dark:bg-gray-700 rounded-md p-3 text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400 focus:outline-none mb-4\"\n            placeholder=\"Ask Marvin anything...\"\n            rows={3}\n            value={question}\n            onChange={(e) => setQuestion(e.target.value)}\n            onKeyDown={handleKeyPress}\n          />\n          <button\n            onClick={askQuestion}\n            disabled={loading || !question.trim()}\n            className=\"w-full bg-blue-600 hover:bg-blue-700 disabled:bg-slate-400 text-white rounded-md py-2 flex justify-center items-center\"\n          >\n            {loading ? <div className=\"loader w-5 h-5 border-2 border-white border-t-transparent rounded-full animate-spin\" /> : <><FiSend className=\"mr-2\" /> Ask</>}\n          </button>\n        </div>\n\n        {answer && (\n          <div className=\"bg-green-50 dark:bg-green-900 border border-green-300 dark:border-green-700 text-green-900 dark:text-green-100 rounded-lg p-4 shadow-sm\">\n            <div className=\"flex justify-between items-center mb-2\">\n              <h2 className=\"font-semibold\">Answer:</h2>\n              <button\n                onClick={() => copyToClipboard(answer)}\n                className=\"text-sm text-blue-600 hover:underline\"\n              >\n                {copied ? <FiCheck /> : <FiCopy />}\n              </button>\n            </div>\n            <p className=\"whitespace-pre-wrap leading-relaxed\">{answer}</p>\n          </div>\n        )}\n\n        {/* Settings Panel */}\n        {showSettings && (\n          <div className=\"mt-6 bg-white dark:bg-gray-800 border border-slate-300 dark:border-gray-600 rounded-xl p-6\">\n            <h3 className=\"font-semibold mb-4 text-gray-800 dark:text-white\">Settings</h3>\n            <div className=\"mb-4\">\n              <label className=\"block text-sm mb-1 text-gray-700 dark:text-gray-300\">API Key (optional)</label>\n              <input\n                type=\"password\"\n                value={apiKey}\n                onChange={(e) => setApiKey(e.target.value)}\n                className=\"w-full p-2 border border-slate-300 dark:border-gray-600 rounded bg-gray-50 dark:bg-gray-700 text-gray-900 dark:text-white\"\n                placeholder=\"sk-...\"\n              />\n              <p className=\"text-xs text-gray-500 mt-1\">Used if you want to override the default key</p>\n            </div>\n\n            <div>\n              <label className=\"block text-sm mb-1 text-gray-700 dark:text-gray-300\">Model</label>\n              <select\n                value={model}\n                onChange={(e) => setModel(e.target.value)}\n                className=\"w-full p-2 border border-slate-300 dark:border-gray-600 rounded bg-gray-50 dark:bg-gray-700 text-gray-900 dark:text-white\"\n              >\n                <option value=\"gpt-3.5-turbo\">gpt-3.5-turbo</option>\n                <option value=\"gpt-4\">gpt-4</option>\n              </select>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}